// 1. Compute the Factorial of a number N. Fact(N) = N  (N - 1) ... 1

#include<stdio.h>

int fact(int num);
int main() {
    int n=17;
    printf("%d",fact(n));
}

int fact(int n){
    if(n == 0 || n == 1){ return 1; }
    else{ return n * fact(n-1); }
}
-------------------------------------------------------------------------------
// 2. Compute the sum of natural numbers until N.

#include<stdio.h>

int sumOfNatural(int num);
int main() {
  int n=10;
  printf("%d",sumOfNatural(n));
}

int sumOfNatural(int n){
    if(n == 1){ return 1; }
    else{ return n + sumOfNatural(n-1); }
}
--------------------------------------------------------------------------------
// 3. Write a function for mutliply(a; b), where a and b are both positive
// integers, but you can only use the + or - operators.

#include<stdio.h>

int multiply(int a, int b);
int main() {
    int num1=20,num2=50;
    printf("%d",multiply(num1,num2));
}

int multiply(int n1,int n2){
    if(n2 == 0){ return 0; }
    return n1 + multiply(n1,n2-1);
}
-----------------------------------------------------------------------------------
// 4. (I'm not clear with the question)
-----------------------------------------------------------------------------------
// 5. Find Greatest Common Divisor (GCD) of 2 numbers using recursion.

#include<stdio.h>

int GCD(int num1,int num2);
int main() {
   int n1=12,n2=54;
   printf("%d",GCD(n1,n2));
}

int GCD(int n1,int n2){
    if(n2==0){ return n1; }
    return GCD(n2,n1%n2);
}
---------------------------------------------------------------------------------
// 6.i. Write a recursive function to reverse a string.

#include<stdio.h>
#include<string.h>

void reverse(char word[],int l,int curr);
int main() {
   char str[] = "welcome";
   reverse(str,strlen(str)-1,strlen(str)-1);
}

void reverse(char str[],int len,int current){
    int x = len - current;
    char tmp='\0';
    if((len/2) == current){
       printf("%s\n",str);
    }
    else{
        tmp = str[x];
        str[x] = str[current];
        str[current] = tmp;
        current = current - 1;
        reverse(str,len,current);
    }
}
-------------------------------------------------------------------------------
// 6.ii. Write a recursive function to reverse the words in a string, i.e., 
// ”cat is running” becomes ”running is cat"

#include<stdio.h>
#include<string.h>

void printStr(char str[],int st,int ed);
int revStr(char str[],int start,int end);

int main() {
    char str[] = "sun rises in the east";
    revStr(str,strlen(str),strlen(str));   
}

void printStr(char str[],int a,int b){
    for(int i=a+1;i<b;i++){
        printf("%c",str[i]);
    }
    printf(" ");
}

int revStr(char str[],int start,int end){
    if(start == 0){
        printStr(str,start-1,end);
         return 0;
    }
    else{
        if(str[start] == ' ' && start >= 1){
            printStr(str,start,end);
            end = start;
            start--;
            revStr(str,start,end);
        }else{
            start--;
            revStr(str,start,end);
        }
    }
}
----------------------------------------------------------------------------